{"version":3,"file":"153.bootstrap.js","mappings":"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AAO,OACPC,YAAY,sBACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,EACPE,OAAO,OACPC,YAAY,UACZC,SAAS,QAET,CACA/N,KAAK,SACL2N,OAAO,EACPE,OAAO,OACPC,YAAY,UACZC,SAAS,OAET,CACA/N,KAAK,SACL2N,OAAO,EACPE,OAAO,OACPC,YACA,oEACAC,SAAS,OAET,CACA/N,KAAK,SACL2N,OAAO,EACPE,OAAO,YACPC,YAAY,oDACZC,SAAS,SAET,CACA/N,KAAK,SACL2N,OAAO,EACPE,OAAO,OACPC,YAAY,kCACZC,SAAS,QAET,CACA/N,KAAK,UACL2N,OAAO,EACPE,OAAO,YACPC,YAAY,qBACZC,SAAS,QACTE,QAAO,GAEP,CACAjO,KAAK,UACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,8BACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,OACPC,YAAY,qBACZC,SAAS,QAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,8BACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,wBACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,mBACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,cACZC,SAAS,QAET,CACA/N,KAAK,YACL2N,OAAO,GACPE,OAAO,YACPC,YAAY,+BACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,SACPC,YAAY,+CACZC,SAAS,SAET,CACA/N,KAAK,SACL2N,OAAO,GACPE,OAAO,SACPC,YAAY,+CACZC,SAAS,SAET,CACA/N,KAAK,UACL2N,OAAO,GACPE,OAAO,UACPC,YAAY,WACZC,SAAS,QACTE,QAAO,GAEP,CACAjO,KAAK,UACL2N,OAAO,GACPE,OAAO,QACPC,YAAY,SACZC,SAAS,QACTE,QAAO,GAEP,CACAjO,KAAK,UACL2N,OAAO,GACPE,OAAO,QACPC,YAAY,mCACZC,SAAS,SAET,CACA/N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","sources":["webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/lib/enoent.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/lib/parse.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/lib/util/escape.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/lib/util/readShebang.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/lib/util/resolveCommand.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/node_modules/isexe/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/node_modules/isexe/mode.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/node_modules/isexe/windows.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/cross-spawn/node_modules/which/which.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/merge-stream/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/path-key/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/shebang-command/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/shebang-regex/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/npm-run-path/node_modules/path-key/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/npm-run-path/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/mimic-fn/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/onetime/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/human-signals/build/src/realtime.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/human-signals/build/src/core.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/human-signals/build/src/signals.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/human-signals/build/src/main.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/error.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/stdio.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/signal-exit/dist/mjs/signals.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/signal-exit/dist/mjs/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/kill.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/is-stream/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/pipe.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/get-stream/source/contents.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/get-stream/source/utils.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/get-stream/source/array-buffer.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/get-stream/source/buffer.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/get-stream/source/string.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/stream.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/promise.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/command.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/lib/verbose.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/execa/index.js","webpack://@scaffoldly/awslambda-bootstrap/./node_modules/strip-final-newline/index.js"],"sourcesContent":["'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n","'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n","'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n","'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n","'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n","'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n","'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n","'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n","'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n","'use strict';\nmodule.exports = /^#!(.*)/;\n","export default function pathKey(options = {}) {\n\tconst {\n\t\tenv = process.env,\n\t\tplatform = process.platform\n\t} = options;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n}\n","import process from 'node:process';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\nimport pathKey from 'path-key';\n\nexport const npmRunPath = ({\n\tcwd = process.cwd(),\n\tpath: pathOption = process.env[pathKey()],\n\tpreferLocal = true,\n\texecPath = process.execPath,\n\taddExecPath = true,\n} = {}) => {\n\tconst cwdString = cwd instanceof URL ? fileURLToPath(cwd) : cwd;\n\tconst cwdPath = path.resolve(cwdString);\n\tconst result = [];\n\n\tif (preferLocal) {\n\t\tapplyPreferLocal(result, cwdPath);\n\t}\n\n\tif (addExecPath) {\n\t\tapplyExecPath(result, execPath, cwdPath);\n\t}\n\n\treturn [...result, pathOption].join(path.delimiter);\n};\n\nconst applyPreferLocal = (result, cwdPath) => {\n\tlet previous;\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n};\n\n// Ensure the running `node` binary is used\nconst applyExecPath = (result, execPath, cwdPath) => {\n\tconst execPathString = execPath instanceof URL ? fileURLToPath(execPath) : execPath;\n\tresult.push(path.resolve(cwdPath, execPathString, '..'));\n};\n\nexport const npmRunPathEnv = ({env = process.env, ...options} = {}) => {\n\tenv = {...env};\n\n\tconst pathName = pathKey({env});\n\toptions.path = env[pathName];\n\tenv[pathName] = npmRunPath(options);\n\n\treturn env;\n};\n","const copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n// - one its descriptors is changed\n// - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nexport default function mimicFunction(to, from, {ignoreNonConfigurable = false} = {}) {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n}\n","import mimicFunction from 'mimic-fn';\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFunction(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nonetime.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n\nexport default onetime;\n","\nexport const getRealtimeSignals=()=>{\nconst length=SIGRTMAX-SIGRTMIN+1;\nreturn Array.from({length},getRealtimeSignal)\n};\n\nconst getRealtimeSignal=(value,index)=>({\nname:`SIGRT${index+1}`,\nnumber:SIGRTMIN+index,\naction:\"terminate\",\ndescription:\"Application-specific signal (realtime)\",\nstandard:\"posix\"\n});\n\nconst SIGRTMIN=34;\nexport const SIGRTMAX=64;","\n\nexport const SIGNALS=[\n{\nname:\"SIGHUP\",\nnumber:1,\naction:\"terminate\",\ndescription:\"Terminal closed\",\nstandard:\"posix\"\n},\n{\nname:\"SIGINT\",\nnumber:2,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-C\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGQUIT\",\nnumber:3,\naction:\"core\",\ndescription:\"User interruption with CTRL-\\\\\",\nstandard:\"posix\"\n},\n{\nname:\"SIGILL\",\nnumber:4,\naction:\"core\",\ndescription:\"Invalid machine instruction\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGTRAP\",\nnumber:5,\naction:\"core\",\ndescription:\"Debugger breakpoint\",\nstandard:\"posix\"\n},\n{\nname:\"SIGABRT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGIOT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGBUS\",\nnumber:7,\naction:\"core\",\ndescription:\n\"Bus error due to misaligned, non-existing address or paging error\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGEMT\",\nnumber:7,\naction:\"terminate\",\ndescription:\"Command should be emulated but is not implemented\",\nstandard:\"other\"\n},\n{\nname:\"SIGFPE\",\nnumber:8,\naction:\"core\",\ndescription:\"Floating point arithmetic error\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGKILL\",\nnumber:9,\naction:\"terminate\",\ndescription:\"Forced termination\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGUSR1\",\nnumber:10,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"\n},\n{\nname:\"SIGSEGV\",\nnumber:11,\naction:\"core\",\ndescription:\"Segmentation fault\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGUSR2\",\nnumber:12,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"\n},\n{\nname:\"SIGPIPE\",\nnumber:13,\naction:\"terminate\",\ndescription:\"Broken pipe or socket\",\nstandard:\"posix\"\n},\n{\nname:\"SIGALRM\",\nnumber:14,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"posix\"\n},\n{\nname:\"SIGTERM\",\nnumber:15,\naction:\"terminate\",\ndescription:\"Termination\",\nstandard:\"ansi\"\n},\n{\nname:\"SIGSTKFLT\",\nnumber:16,\naction:\"terminate\",\ndescription:\"Stack is empty or overflowed\",\nstandard:\"other\"\n},\n{\nname:\"SIGCHLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"posix\"\n},\n{\nname:\"SIGCLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"other\"\n},\n{\nname:\"SIGCONT\",\nnumber:18,\naction:\"unpause\",\ndescription:\"Unpaused\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGSTOP\",\nnumber:19,\naction:\"pause\",\ndescription:\"Paused\",\nstandard:\"posix\",\nforced:true\n},\n{\nname:\"SIGTSTP\",\nnumber:20,\naction:\"pause\",\ndescription:\"Paused using CTRL-Z or \\\"suspend\\\"\",\nstandard:\"posix\"\n},\n{\nname:\"SIGTTIN\",\nnumber:21,\naction:\"pause\",\ndescription:\"Background process cannot read terminal input\",\nstandard:\"posix\"\n},\n{\nname:\"SIGBREAK\",\nnumber:21,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-BREAK\",\nstandard:\"other\"\n},\n{\nname:\"SIGTTOU\",\nnumber:22,\naction:\"pause\",\ndescription:\"Background process cannot write to terminal output\",\nstandard:\"posix\"\n},\n{\nname:\"SIGURG\",\nnumber:23,\naction:\"ignore\",\ndescription:\"Socket received out-of-band data\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGXCPU\",\nnumber:24,\naction:\"core\",\ndescription:\"Process timed out\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGXFSZ\",\nnumber:25,\naction:\"core\",\ndescription:\"File too big\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGVTALRM\",\nnumber:26,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGPROF\",\nnumber:27,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGWINCH\",\nnumber:28,\naction:\"ignore\",\ndescription:\"Terminal window size changed\",\nstandard:\"bsd\"\n},\n{\nname:\"SIGIO\",\nnumber:29,\naction:\"terminate\",\ndescription:\"I/O is available\",\nstandard:\"other\"\n},\n{\nname:\"SIGPOLL\",\nnumber:29,\naction:\"terminate\",\ndescription:\"Watched event\",\nstandard:\"other\"\n},\n{\nname:\"SIGINFO\",\nnumber:29,\naction:\"ignore\",\ndescription:\"Request for process information\",\nstandard:\"other\"\n},\n{\nname:\"SIGPWR\",\nnumber:30,\naction:\"terminate\",\ndescription:\"Device running out of power\",\nstandard:\"systemv\"\n},\n{\nname:\"SIGSYS\",\nnumber:31,\naction:\"core\",\ndescription:\"Invalid system call\",\nstandard:\"other\"\n},\n{\nname:\"SIGUNUSED\",\nnumber:31,\naction:\"terminate\",\ndescription:\"Invalid system call\",\nstandard:\"other\"\n}];","import{constants}from\"node:os\";\n\nimport{SIGNALS}from\"./core.js\";\nimport{getRealtimeSignals}from\"./realtime.js\";\n\n\n\nexport const getSignals=()=>{\nconst realtimeSignals=getRealtimeSignals();\nconst signals=[...SIGNALS,...realtimeSignals].map(normalizeSignal);\nreturn signals\n};\n\n\n\n\n\n\n\nconst normalizeSignal=({\nname,\nnumber:defaultNumber,\ndescription,\naction,\nforced=false,\nstandard\n})=>{\nconst{\nsignals:{[name]:constantSignal}\n}=constants;\nconst supported=constantSignal!==undefined;\nconst number=supported?constantSignal:defaultNumber;\nreturn{name,number,description,supported,action,forced,standard}\n};","import{constants}from\"node:os\";\n\nimport{SIGRTMAX}from\"./realtime.js\";\nimport{getSignals}from\"./signals.js\";\n\n\n\nconst getSignalsByName=()=>{\nconst signals=getSignals();\nreturn Object.fromEntries(signals.map(getSignalByName))\n};\n\nconst getSignalByName=({\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard\n})=>[name,{name,number,description,supported,action,forced,standard}];\n\nexport const signalsByName=getSignalsByName();\n\n\n\n\nconst getSignalsByNumber=()=>{\nconst signals=getSignals();\nconst length=SIGRTMAX+1;\nconst signalsA=Array.from({length},(value,number)=>\ngetSignalByNumber(number,signals)\n);\nreturn Object.assign({},...signalsA)\n};\n\nconst getSignalByNumber=(number,signals)=>{\nconst signal=findSignalByNumber(number,signals);\n\nif(signal===undefined){\nreturn{}\n}\n\nconst{name,description,supported,action,forced,standard}=signal;\nreturn{\n[number]:{\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard\n}\n}\n};\n\n\n\nconst findSignalByNumber=(number,signals)=>{\nconst signal=signals.find(({name})=>constants.signals[name]===number);\n\nif(signal!==undefined){\nreturn signal\n}\n\nreturn signals.find((signalA)=>signalA.number===number)\n};\n\nexport const signalsByNumber=getSignalsByNumber();","import process from 'node:process';\nimport {signalsByName} from 'human-signals';\n\nconst getErrorPrefix = ({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled}) => {\n\tif (timedOut) {\n\t\treturn `timed out after ${timeout} milliseconds`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn 'was canceled';\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `failed with ${errorCode}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'failed';\n};\n\nexport const makeError = ({\n\tstdout,\n\tstderr,\n\tall,\n\terror,\n\tsignal,\n\texitCode,\n\tcommand,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tkilled,\n\tparsed: {options: {timeout, cwd = process.cwd()}},\n}) => {\n\t// `signal` and `exitCode` emitted on `spawned.on('exit')` event can be `null`.\n\t// We normalize them to `undefined`\n\texitCode = exitCode === null ? undefined : exitCode;\n\tsignal = signal === null ? undefined : signal;\n\tconst signalDescription = signal === undefined ? undefined : signalsByName[signal].description;\n\n\tconst errorCode = error && error.code;\n\n\tconst prefix = getErrorPrefix({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled});\n\tconst execaMessage = `Command ${prefix}: ${command}`;\n\tconst isError = Object.prototype.toString.call(error) === '[object Error]';\n\tconst shortMessage = isError ? `${execaMessage}\\n${error.message}` : execaMessage;\n\tconst message = [shortMessage, stderr, stdout].filter(Boolean).join('\\n');\n\n\tif (isError) {\n\t\terror.originalMessage = error.message;\n\t\terror.message = message;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\n\terror.shortMessage = shortMessage;\n\terror.command = command;\n\terror.escapedCommand = escapedCommand;\n\terror.exitCode = exitCode;\n\terror.signal = signal;\n\terror.signalDescription = signalDescription;\n\terror.stdout = stdout;\n\terror.stderr = stderr;\n\terror.cwd = cwd;\n\n\tif (all !== undefined) {\n\t\terror.all = all;\n\t}\n\n\tif ('bufferedData' in error) {\n\t\tdelete error.bufferedData;\n\t}\n\n\terror.failed = true;\n\terror.timedOut = Boolean(timedOut);\n\terror.isCanceled = isCanceled;\n\terror.killed = killed && !timedOut;\n\n\treturn error;\n};\n","const aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nexport const normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\n// `ipc` is pushed unless it is already present\nexport const normalizeStdioNode = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n","/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals = [];\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM');\nif (process.platform !== 'win32') {\n    signals.push('SIGALRM', 'SIGABRT', 'SIGVTALRM', 'SIGXCPU', 'SIGXFSZ', 'SIGUSR2', 'SIGTRAP', 'SIGSYS', 'SIGQUIT', 'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n    );\n}\nif (process.platform === 'linux') {\n    signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT');\n}\n//# sourceMappingURL=signals.js.map","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js';\nexport { signals };\nconst processOk = (process) => !!process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function';\nconst kExitEmitter = Symbol.for('signal-exit emitter');\nconst global = globalThis;\nconst ObjectDefineProperty = Object.defineProperty.bind(Object);\n// teeny special purpose ee\nclass Emitter {\n    emitted = {\n        afterExit: false,\n        exit: false,\n    };\n    listeners = {\n        afterExit: [],\n        exit: [],\n    };\n    count = 0;\n    id = Math.random();\n    constructor() {\n        if (global[kExitEmitter]) {\n            return global[kExitEmitter];\n        }\n        ObjectDefineProperty(global, kExitEmitter, {\n            value: this,\n            writable: false,\n            enumerable: false,\n            configurable: false,\n        });\n    }\n    on(ev, fn) {\n        this.listeners[ev].push(fn);\n    }\n    removeListener(ev, fn) {\n        const list = this.listeners[ev];\n        const i = list.indexOf(fn);\n        /* c8 ignore start */\n        if (i === -1) {\n            return;\n        }\n        /* c8 ignore stop */\n        if (i === 0 && list.length === 1) {\n            list.length = 0;\n        }\n        else {\n            list.splice(i, 1);\n        }\n    }\n    emit(ev, code, signal) {\n        if (this.emitted[ev]) {\n            return false;\n        }\n        this.emitted[ev] = true;\n        let ret = false;\n        for (const fn of this.listeners[ev]) {\n            ret = fn(code, signal) === true || ret;\n        }\n        if (ev === 'exit') {\n            ret = this.emit('afterExit', code, signal) || ret;\n        }\n        return ret;\n    }\n}\nclass SignalExitBase {\n}\nconst signalExitWrap = (handler) => {\n    return {\n        onExit(cb, opts) {\n            return handler.onExit(cb, opts);\n        },\n        load() {\n            return handler.load();\n        },\n        unload() {\n            return handler.unload();\n        },\n    };\n};\nclass SignalExitFallback extends SignalExitBase {\n    onExit() {\n        return () => { };\n    }\n    load() { }\n    unload() { }\n}\nclass SignalExit extends SignalExitBase {\n    // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n    // so use a supported signal instead\n    /* c8 ignore start */\n    #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP';\n    /* c8 ignore stop */\n    #emitter = new Emitter();\n    #process;\n    #originalProcessEmit;\n    #originalProcessReallyExit;\n    #sigListeners = {};\n    #loaded = false;\n    constructor(process) {\n        super();\n        this.#process = process;\n        // { <signal>: <listener fn>, ... }\n        this.#sigListeners = {};\n        for (const sig of signals) {\n            this.#sigListeners[sig] = () => {\n                // If there are no other listeners, an exit is coming!\n                // Simplest way: remove us and then re-send the signal.\n                // We know that this will kill the process, so we can\n                // safely emit now.\n                const listeners = this.#process.listeners(sig);\n                let { count } = this.#emitter;\n                // This is a workaround for the fact that signal-exit v3 and signal\n                // exit v4 are not aware of each other, and each will attempt to let\n                // the other handle it, so neither of them do. To correct this, we\n                // detect if we're the only handler *except* for previous versions\n                // of signal-exit, and increment by the count of listeners it has\n                // created.\n                /* c8 ignore start */\n                const p = process;\n                if (typeof p.__signal_exit_emitter__ === 'object' &&\n                    typeof p.__signal_exit_emitter__.count === 'number') {\n                    count += p.__signal_exit_emitter__.count;\n                }\n                /* c8 ignore stop */\n                if (listeners.length === count) {\n                    this.unload();\n                    const ret = this.#emitter.emit('exit', null, sig);\n                    /* c8 ignore start */\n                    const s = sig === 'SIGHUP' ? this.#hupSig : sig;\n                    if (!ret)\n                        process.kill(process.pid, s);\n                    /* c8 ignore stop */\n                }\n            };\n        }\n        this.#originalProcessReallyExit = process.reallyExit;\n        this.#originalProcessEmit = process.emit;\n    }\n    onExit(cb, opts) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return () => { };\n        }\n        /* c8 ignore stop */\n        if (this.#loaded === false) {\n            this.load();\n        }\n        const ev = opts?.alwaysLast ? 'afterExit' : 'exit';\n        this.#emitter.on(ev, cb);\n        return () => {\n            this.#emitter.removeListener(ev, cb);\n            if (this.#emitter.listeners['exit'].length === 0 &&\n                this.#emitter.listeners['afterExit'].length === 0) {\n                this.unload();\n            }\n        };\n    }\n    load() {\n        if (this.#loaded) {\n            return;\n        }\n        this.#loaded = true;\n        // This is the number of onSignalExit's that are in play.\n        // It's important so that we can count the correct number of\n        // listeners on signals, and don't wait for the other one to\n        // handle it instead of us.\n        this.#emitter.count += 1;\n        for (const sig of signals) {\n            try {\n                const fn = this.#sigListeners[sig];\n                if (fn)\n                    this.#process.on(sig, fn);\n            }\n            catch (_) { }\n        }\n        this.#process.emit = (ev, ...a) => {\n            return this.#processEmit(ev, ...a);\n        };\n        this.#process.reallyExit = (code) => {\n            return this.#processReallyExit(code);\n        };\n    }\n    unload() {\n        if (!this.#loaded) {\n            return;\n        }\n        this.#loaded = false;\n        signals.forEach(sig => {\n            const listener = this.#sigListeners[sig];\n            /* c8 ignore start */\n            if (!listener) {\n                throw new Error('Listener not defined for signal: ' + sig);\n            }\n            /* c8 ignore stop */\n            try {\n                this.#process.removeListener(sig, listener);\n                /* c8 ignore start */\n            }\n            catch (_) { }\n            /* c8 ignore stop */\n        });\n        this.#process.emit = this.#originalProcessEmit;\n        this.#process.reallyExit = this.#originalProcessReallyExit;\n        this.#emitter.count -= 1;\n    }\n    #processReallyExit(code) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return 0;\n        }\n        this.#process.exitCode = code || 0;\n        /* c8 ignore stop */\n        this.#emitter.emit('exit', this.#process.exitCode, null);\n        return this.#originalProcessReallyExit.call(this.#process, this.#process.exitCode);\n    }\n    #processEmit(ev, ...args) {\n        const og = this.#originalProcessEmit;\n        if (ev === 'exit' && processOk(this.#process)) {\n            if (typeof args[0] === 'number') {\n                this.#process.exitCode = args[0];\n                /* c8 ignore start */\n            }\n            /* c8 ignore start */\n            const ret = og.call(this.#process, ev, ...args);\n            /* c8 ignore start */\n            this.#emitter.emit('exit', this.#process.exitCode, null);\n            /* c8 ignore stop */\n            return ret;\n        }\n        else {\n            return og.call(this.#process, ev, ...args);\n        }\n    }\n}\nconst process = globalThis.process;\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const { \n/**\n * Called when the process is exiting, whether via signal, explicit\n * exit, or running out of stuff to do.\n *\n * If the global process object is not suitable for instrumentation,\n * then this will be a no-op.\n *\n * Returns a function that may be used to unload signal-exit.\n */\nonExit, \n/**\n * Load the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nload, \n/**\n * Unload the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nunload, } = signalExitWrap(processOk(process) ? new SignalExit(process) : new SignalExitFallback());\n//# sourceMappingURL=index.js.map","import os from 'node:os';\nimport {onExit} from 'signal-exit';\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior\nexport const spawnedKill = (kill, signal = 'SIGTERM', options = {}) => {\n\tconst killResult = kill(signal);\n\tsetKillTimeout(kill, signal, options, killResult);\n\treturn killResult;\n};\n\nconst setKillTimeout = (kill, signal, options, killResult) => {\n\tif (!shouldForceKill(signal, options, killResult)) {\n\t\treturn;\n\t}\n\n\tconst timeout = getForceKillAfterTimeout(options);\n\tconst t = setTimeout(() => {\n\t\tkill('SIGKILL');\n\t}, timeout);\n\n\t// Guarded because there's no `.unref()` when `execa` is used in the renderer\n\t// process in Electron. This cannot be tested since we don't run tests in\n\t// Electron.\n\t// istanbul ignore else\n\tif (t.unref) {\n\t\tt.unref();\n\t}\n};\n\nconst shouldForceKill = (signal, {forceKillAfterTimeout}, killResult) => isSigterm(signal) && forceKillAfterTimeout !== false && killResult;\n\nconst isSigterm = signal => signal === os.constants.signals.SIGTERM\n\t\t|| (typeof signal === 'string' && signal.toUpperCase() === 'SIGTERM');\n\nconst getForceKillAfterTimeout = ({forceKillAfterTimeout = true}) => {\n\tif (forceKillAfterTimeout === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterTimeout) || forceKillAfterTimeout < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${forceKillAfterTimeout}\\` (${typeof forceKillAfterTimeout})`);\n\t}\n\n\treturn forceKillAfterTimeout;\n};\n\n// `childProcess.cancel()`\nexport const spawnedCancel = (spawned, context) => {\n\tconst killResult = spawned.kill();\n\n\tif (killResult) {\n\t\tcontext.isCanceled = true;\n\t}\n};\n\nconst timeoutKill = (spawned, signal, reject) => {\n\tspawned.kill(signal);\n\treject(Object.assign(new Error('Timed out'), {timedOut: true, signal}));\n};\n\n// `timeout` option handling\nexport const setupTimeout = (spawned, {timeout, killSignal = 'SIGTERM'}, spawnedPromise) => {\n\tif (timeout === 0 || timeout === undefined) {\n\t\treturn spawnedPromise;\n\t}\n\n\tlet timeoutId;\n\tconst timeoutPromise = new Promise((resolve, reject) => {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutKill(spawned, killSignal, reject);\n\t\t}, timeout);\n\t});\n\n\tconst safeSpawnedPromise = spawnedPromise.finally(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\treturn Promise.race([timeoutPromise, safeSpawnedPromise]);\n};\n\nexport const validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// `cleanup` option handling\nexport const setExitHandler = async (spawned, {cleanup, detached}, timedPromise) => {\n\tif (!cleanup || detached) {\n\t\treturn timedPromise;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tspawned.kill();\n\t});\n\n\treturn timedPromise.finally(() => {\n\t\tremoveExitHandler();\n\t});\n};\n","export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n","import {createWriteStream} from 'node:fs';\nimport {ChildProcess} from 'node:child_process';\nimport {isWritableStream} from 'is-stream';\n\nconst isExecaChildProcess = target => target instanceof ChildProcess && typeof target.then === 'function';\n\nconst pipeToTarget = (spawned, streamName, target) => {\n\tif (typeof target === 'string') {\n\t\tspawned[streamName].pipe(createWriteStream(target));\n\t\treturn spawned;\n\t}\n\n\tif (isWritableStream(target)) {\n\t\tspawned[streamName].pipe(target);\n\t\treturn spawned;\n\t}\n\n\tif (!isExecaChildProcess(target)) {\n\t\tthrow new TypeError('The second argument must be a string, a stream or an Execa child process.');\n\t}\n\n\tif (!isWritableStream(target.stdin)) {\n\t\tthrow new TypeError('The target child process\\'s stdin must be available.');\n\t}\n\n\tspawned[streamName].pipe(target.stdin);\n\treturn target;\n};\n\nexport const addPipeMethods = spawned => {\n\tif (spawned.stdout !== null) {\n\t\tspawned.pipeStdout = pipeToTarget.bind(undefined, spawned, 'stdout');\n\t}\n\n\tif (spawned.stderr !== null) {\n\t\tspawned.pipeStderr = pipeToTarget.bind(undefined, spawned, 'stderr');\n\t}\n\n\tif (spawned.all !== undefined) {\n\t\tspawned.pipeAll = pipeToTarget.bind(undefined, spawned, 'all');\n\t}\n};\n","export const getStreamContents = async (stream, {init, convertChunk, getSize, truncateChunk, addChunk, getFinalChunk, finalize}, {maxBuffer = Number.POSITIVE_INFINITY} = {}) => {\n\tif (!isAsyncIterable(stream)) {\n\t\tthrow new Error('The first argument must be a Readable, a ReadableStream, or an async iterable.');\n\t}\n\n\tconst state = init();\n\tstate.length = 0;\n\n\ttry {\n\t\tfor await (const chunk of stream) {\n\t\t\tconst chunkType = getChunkType(chunk);\n\t\t\tconst convertedChunk = convertChunk[chunkType](chunk, state);\n\t\t\tappendChunk({convertedChunk, state, getSize, truncateChunk, addChunk, maxBuffer});\n\t\t}\n\n\t\tappendFinalChunk({state, convertChunk, getSize, truncateChunk, addChunk, getFinalChunk, maxBuffer});\n\t\treturn finalize(state);\n\t} catch (error) {\n\t\terror.bufferedData = finalize(state);\n\t\tthrow error;\n\t}\n};\n\nconst appendFinalChunk = ({state, getSize, truncateChunk, addChunk, getFinalChunk, maxBuffer}) => {\n\tconst convertedChunk = getFinalChunk(state);\n\tif (convertedChunk !== undefined) {\n\t\tappendChunk({convertedChunk, state, getSize, truncateChunk, addChunk, maxBuffer});\n\t}\n};\n\nconst appendChunk = ({convertedChunk, state, getSize, truncateChunk, addChunk, maxBuffer}) => {\n\tconst chunkSize = getSize(convertedChunk);\n\tconst newLength = state.length + chunkSize;\n\n\tif (newLength <= maxBuffer) {\n\t\taddNewChunk(convertedChunk, state, addChunk, newLength);\n\t\treturn;\n\t}\n\n\tconst truncatedChunk = truncateChunk(convertedChunk, maxBuffer - state.length);\n\n\tif (truncatedChunk !== undefined) {\n\t\taddNewChunk(truncatedChunk, state, addChunk, maxBuffer);\n\t}\n\n\tthrow new MaxBufferError();\n};\n\nconst addNewChunk = (convertedChunk, state, addChunk, newLength) => {\n\tstate.contents = addChunk(convertedChunk, state, newLength);\n\tstate.length = newLength;\n};\n\nconst isAsyncIterable = stream => typeof stream === 'object' && stream !== null && typeof stream[Symbol.asyncIterator] === 'function';\n\nconst getChunkType = chunk => {\n\tconst typeOfChunk = typeof chunk;\n\n\tif (typeOfChunk === 'string') {\n\t\treturn 'string';\n\t}\n\n\tif (typeOfChunk !== 'object' || chunk === null) {\n\t\treturn 'others';\n\t}\n\n\t// eslint-disable-next-line n/prefer-global/buffer\n\tif (globalThis.Buffer?.isBuffer(chunk)) {\n\t\treturn 'buffer';\n\t}\n\n\tconst prototypeName = objectToString.call(chunk);\n\n\tif (prototypeName === '[object ArrayBuffer]') {\n\t\treturn 'arrayBuffer';\n\t}\n\n\tif (prototypeName === '[object DataView]') {\n\t\treturn 'dataView';\n\t}\n\n\tif (\n\t\tNumber.isInteger(chunk.byteLength)\n\t\t&& Number.isInteger(chunk.byteOffset)\n\t\t&& objectToString.call(chunk.buffer) === '[object ArrayBuffer]'\n\t) {\n\t\treturn 'typedArray';\n\t}\n\n\treturn 'others';\n};\n\nconst {toString: objectToString} = Object.prototype;\n\nexport class MaxBufferError extends Error {\n\tname = 'MaxBufferError';\n\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t}\n}\n","export const identity = value => value;\n\nexport const noop = () => undefined;\n\nexport const getContentsProp = ({contents}) => contents;\n\nexport const throwObjectStream = chunk => {\n\tthrow new Error(`Streams in object mode are not supported: ${String(chunk)}`);\n};\n\nexport const getLengthProp = convertedChunk => convertedChunk.length;\n","import {getStreamContents} from './contents.js';\nimport {noop, throwObjectStream, getLengthProp} from './utils.js';\n\nexport async function getStreamAsArrayBuffer(stream, options) {\n\treturn getStreamContents(stream, arrayBufferMethods, options);\n}\n\nconst initArrayBuffer = () => ({contents: new ArrayBuffer(0)});\n\nconst useTextEncoder = chunk => textEncoder.encode(chunk);\nconst textEncoder = new TextEncoder();\n\nconst useUint8Array = chunk => new Uint8Array(chunk);\n\nconst useUint8ArrayWithOffset = chunk => new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n\nconst truncateArrayBufferChunk = (convertedChunk, chunkSize) => convertedChunk.slice(0, chunkSize);\n\n// `contents` is an increasingly growing `Uint8Array`.\nconst addArrayBufferChunk = (convertedChunk, {contents, length: previousLength}, length) => {\n\tconst newContents = hasArrayBufferResize() ? resizeArrayBuffer(contents, length) : resizeArrayBufferSlow(contents, length);\n\tnew Uint8Array(newContents).set(convertedChunk, previousLength);\n\treturn newContents;\n};\n\n// Without `ArrayBuffer.resize()`, `contents` size is always a power of 2.\n// This means its last bytes are zeroes (not stream data), which need to be\n// trimmed at the end with `ArrayBuffer.slice()`.\nconst resizeArrayBufferSlow = (contents, length) => {\n\tif (length <= contents.byteLength) {\n\t\treturn contents;\n\t}\n\n\tconst arrayBuffer = new ArrayBuffer(getNewContentsLength(length));\n\tnew Uint8Array(arrayBuffer).set(new Uint8Array(contents), 0);\n\treturn arrayBuffer;\n};\n\n// With `ArrayBuffer.resize()`, `contents` size matches exactly the size of\n// the stream data. It does not include extraneous zeroes to trim at the end.\n// The underlying `ArrayBuffer` does allocate a number of bytes that is a power\n// of 2, but those bytes are only visible after calling `ArrayBuffer.resize()`.\nconst resizeArrayBuffer = (contents, length) => {\n\tif (length <= contents.maxByteLength) {\n\t\tcontents.resize(length);\n\t\treturn contents;\n\t}\n\n\tconst arrayBuffer = new ArrayBuffer(length, {maxByteLength: getNewContentsLength(length)});\n\tnew Uint8Array(arrayBuffer).set(new Uint8Array(contents), 0);\n\treturn arrayBuffer;\n};\n\n// Retrieve the closest `length` that is both >= and a power of 2\nconst getNewContentsLength = length => SCALE_FACTOR ** Math.ceil(Math.log(length) / Math.log(SCALE_FACTOR));\n\nconst SCALE_FACTOR = 2;\n\nconst finalizeArrayBuffer = ({contents, length}) => hasArrayBufferResize() ? contents : contents.slice(0, length);\n\n// `ArrayBuffer.slice()` is slow. When `ArrayBuffer.resize()` is available\n// (Node >=20.0.0, Safari >=16.4 and Chrome), we can use it instead.\n// eslint-disable-next-line no-warning-comments\n// TODO: remove after dropping support for Node 20.\n// eslint-disable-next-line no-warning-comments\n// TODO: use `ArrayBuffer.transferToFixedLength()` instead once it is available\nconst hasArrayBufferResize = () => 'resize' in ArrayBuffer.prototype;\n\nconst arrayBufferMethods = {\n\tinit: initArrayBuffer,\n\tconvertChunk: {\n\t\tstring: useTextEncoder,\n\t\tbuffer: useUint8Array,\n\t\tarrayBuffer: useUint8Array,\n\t\tdataView: useUint8ArrayWithOffset,\n\t\ttypedArray: useUint8ArrayWithOffset,\n\t\tothers: throwObjectStream,\n\t},\n\tgetSize: getLengthProp,\n\ttruncateChunk: truncateArrayBufferChunk,\n\taddChunk: addArrayBufferChunk,\n\tgetFinalChunk: noop,\n\tfinalize: finalizeArrayBuffer,\n};\n","import {getStreamAsArrayBuffer} from './array-buffer.js';\n\nexport async function getStreamAsBuffer(stream, options) {\n\tif (!('Buffer' in globalThis)) {\n\t\tthrow new Error('getStreamAsBuffer() is only supported in Node.js');\n\t}\n\n\ttry {\n\t\treturn arrayBufferToNodeBuffer(await getStreamAsArrayBuffer(stream, options));\n\t} catch (error) {\n\t\tif (error.bufferedData !== undefined) {\n\t\t\terror.bufferedData = arrayBufferToNodeBuffer(error.bufferedData);\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\n// eslint-disable-next-line n/prefer-global/buffer\nconst arrayBufferToNodeBuffer = arrayBuffer => globalThis.Buffer.from(arrayBuffer);\n","import {getStreamContents} from './contents.js';\nimport {identity, getContentsProp, throwObjectStream, getLengthProp} from './utils.js';\n\nexport async function getStreamAsString(stream, options) {\n\treturn getStreamContents(stream, stringMethods, options);\n}\n\nconst initString = () => ({contents: '', textDecoder: new TextDecoder()});\n\nconst useTextDecoder = (chunk, {textDecoder}) => textDecoder.decode(chunk, {stream: true});\n\nconst addStringChunk = (convertedChunk, {contents}) => contents + convertedChunk;\n\nconst truncateStringChunk = (convertedChunk, chunkSize) => convertedChunk.slice(0, chunkSize);\n\nconst getFinalStringChunk = ({textDecoder}) => {\n\tconst finalChunk = textDecoder.decode();\n\treturn finalChunk === '' ? undefined : finalChunk;\n};\n\nconst stringMethods = {\n\tinit: initString,\n\tconvertChunk: {\n\t\tstring: identity,\n\t\tbuffer: useTextDecoder,\n\t\tarrayBuffer: useTextDecoder,\n\t\tdataView: useTextDecoder,\n\t\ttypedArray: useTextDecoder,\n\t\tothers: throwObjectStream,\n\t},\n\tgetSize: getLengthProp,\n\ttruncateChunk: truncateStringChunk,\n\taddChunk: addStringChunk,\n\tgetFinalChunk: getFinalStringChunk,\n\tfinalize: getContentsProp,\n};\n","import {createReadStream, readFileSync} from 'node:fs';\nimport {setTimeout} from 'node:timers/promises';\nimport {isStream} from 'is-stream';\nimport getStream, {getStreamAsBuffer} from 'get-stream';\nimport mergeStream from 'merge-stream';\n\nconst validateInputOptions = input => {\n\tif (input !== undefined) {\n\t\tthrow new TypeError('The `input` and `inputFile` options cannot be both set.');\n\t}\n};\n\nconst getInputSync = ({input, inputFile}) => {\n\tif (typeof inputFile !== 'string') {\n\t\treturn input;\n\t}\n\n\tvalidateInputOptions(input);\n\treturn readFileSync(inputFile);\n};\n\n// `input` and `inputFile` option in sync mode\nexport const handleInputSync = options => {\n\tconst input = getInputSync(options);\n\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n\n\treturn input;\n};\n\nconst getInput = ({input, inputFile}) => {\n\tif (typeof inputFile !== 'string') {\n\t\treturn input;\n\t}\n\n\tvalidateInputOptions(input);\n\treturn createReadStream(inputFile);\n};\n\n// `input` and `inputFile` option in async mode\nexport const handleInput = (spawned, options) => {\n\tconst input = getInput(options);\n\n\tif (input === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nexport const makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\t// When `buffer` is `false`, `streamPromise` is `undefined` and there is no buffered data to retrieve\n\tif (!stream || streamPromise === undefined) {\n\t\treturn;\n\t}\n\n\t// Wait for the `all` stream to receive the last chunk before destroying the stream\n\tawait setTimeout(0);\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\t// eslint-disable-next-line unicorn/text-encoding-identifier-case\n\tif (encoding === 'utf8' || encoding === 'utf-8') {\n\t\treturn getStream(stream, {maxBuffer});\n\t}\n\n\tif (encoding === null || encoding === 'buffer') {\n\t\treturn getStreamAsBuffer(stream, {maxBuffer});\n\t}\n\n\treturn applyEncoding(stream, maxBuffer, encoding);\n};\n\nconst applyEncoding = async (stream, maxBuffer, encoding) => {\n\tconst buffer = await getStreamAsBuffer(stream, {maxBuffer});\n\treturn buffer.toString(encoding);\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nexport const getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise),\n\t\t]);\n\t}\n};\n","// eslint-disable-next-line unicorn/prefer-top-level-await\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\n\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property),\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nexport const mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function'\n\t\t\t? (...args) => Reflect.apply(descriptor.value, promise(), args)\n\t\t\t: descriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n};\n\n// Use promises instead of `child_process` events\nexport const getSpawnedPromise = spawned => new Promise((resolve, reject) => {\n\tspawned.on('exit', (exitCode, signal) => {\n\t\tresolve({exitCode, signal});\n\t});\n\n\tspawned.on('error', error => {\n\t\treject(error);\n\t});\n\n\tif (spawned.stdin) {\n\t\tspawned.stdin.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\t}\n});\n","import {Buffer} from 'node:buffer';\nimport {ChildProcess} from 'node:child_process';\n\nconst normalizeArgs = (file, args = []) => {\n\tif (!Array.isArray(args)) {\n\t\treturn [file];\n\t}\n\n\treturn [file, ...args];\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w.-]+$/;\n\nconst escapeArg = arg => {\n\tif (typeof arg !== 'string' || NO_ESCAPE_REGEXP.test(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn `\"${arg.replaceAll('\"', '\\\\\"')}\"`;\n};\n\nexport const joinCommand = (file, args) => normalizeArgs(file, args).join(' ');\n\nexport const getEscapedCommand = (file, args) => normalizeArgs(file, args).map(arg => escapeArg(arg)).join(' ');\n\nconst SPACES_REGEXP = / +/g;\n\n// Handle `execaCommand()`\nexport const parseCommand = command => {\n\tconst tokens = [];\n\tfor (const token of command.trim().split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens.at(-1);\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n\nconst parseExpression = expression => {\n\tconst typeOfExpression = typeof expression;\n\n\tif (typeOfExpression === 'string') {\n\t\treturn expression;\n\t}\n\n\tif (typeOfExpression === 'number') {\n\t\treturn String(expression);\n\t}\n\n\tif (\n\t\ttypeOfExpression === 'object'\n\t\t&& expression !== null\n\t\t&& !(expression instanceof ChildProcess)\n\t\t&& 'stdout' in expression\n\t) {\n\t\tconst typeOfStdout = typeof expression.stdout;\n\n\t\tif (typeOfStdout === 'string') {\n\t\t\treturn expression.stdout;\n\t\t}\n\n\t\tif (Buffer.isBuffer(expression.stdout)) {\n\t\t\treturn expression.stdout.toString();\n\t\t}\n\n\t\tthrow new TypeError(`Unexpected \"${typeOfStdout}\" stdout in template expression`);\n\t}\n\n\tthrow new TypeError(`Unexpected \"${typeOfExpression}\" in template expression`);\n};\n\nconst concatTokens = (tokens, nextTokens, isNew) => isNew || tokens.length === 0 || nextTokens.length === 0\n\t? [...tokens, ...nextTokens]\n\t: [\n\t\t...tokens.slice(0, -1),\n\t\t`${tokens.at(-1)}${nextTokens[0]}`,\n\t\t...nextTokens.slice(1),\n\t];\n\nconst parseTemplate = ({templates, expressions, tokens, index, template}) => {\n\tconst templateString = template ?? templates.raw[index];\n\tconst templateTokens = templateString.split(SPACES_REGEXP).filter(Boolean);\n\tconst newTokens = concatTokens(\n\t\ttokens,\n\t\ttemplateTokens,\n\t\ttemplateString.startsWith(' '),\n\t);\n\n\tif (index === expressions.length) {\n\t\treturn newTokens;\n\t}\n\n\tconst expression = expressions[index];\n\tconst expressionTokens = Array.isArray(expression)\n\t\t? expression.map(expression => parseExpression(expression))\n\t\t: [parseExpression(expression)];\n\treturn concatTokens(\n\t\tnewTokens,\n\t\texpressionTokens,\n\t\ttemplateString.endsWith(' '),\n\t);\n};\n\nexport const parseTemplates = (templates, expressions) => {\n\tlet tokens = [];\n\n\tfor (const [index, template] of templates.entries()) {\n\t\ttokens = parseTemplate({templates, expressions, tokens, index, template});\n\t}\n\n\treturn tokens;\n};\n\n","import {debuglog} from 'node:util';\nimport process from 'node:process';\n\nexport const verboseDefault = debuglog('execa').enabled;\n\nconst padField = (field, padding) => String(field).padStart(padding, '0');\n\nconst getTimestamp = () => {\n\tconst date = new Date();\n\treturn `${padField(date.getHours(), 2)}:${padField(date.getMinutes(), 2)}:${padField(date.getSeconds(), 2)}.${padField(date.getMilliseconds(), 3)}`;\n};\n\nexport const logCommand = (escapedCommand, {verbose}) => {\n\tif (!verbose) {\n\t\treturn;\n\t}\n\n\tprocess.stderr.write(`[${getTimestamp()}] ${escapedCommand}\\n`);\n};\n","import {Buffer} from 'node:buffer';\nimport path from 'node:path';\nimport childProcess from 'node:child_process';\nimport process from 'node:process';\nimport crossSpawn from 'cross-spawn';\nimport stripFinalNewline from 'strip-final-newline';\nimport {npmRunPathEnv} from 'npm-run-path';\nimport onetime from 'onetime';\nimport {makeError} from './lib/error.js';\nimport {normalizeStdio, normalizeStdioNode} from './lib/stdio.js';\nimport {spawnedKill, spawnedCancel, setupTimeout, validateTimeout, setExitHandler} from './lib/kill.js';\nimport {addPipeMethods} from './lib/pipe.js';\nimport {handleInput, getSpawnedResult, makeAllStream, handleInputSync} from './lib/stream.js';\nimport {mergePromise, getSpawnedPromise} from './lib/promise.js';\nimport {joinCommand, parseCommand, parseTemplates, getEscapedCommand} from './lib/command.js';\nimport {logCommand, verboseDefault} from './lib/verbose.js';\n\nconst DEFAULT_MAX_BUFFER = 1000 * 1000 * 100;\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, localDir, execPath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal) {\n\t\treturn npmRunPathEnv({env, cwd: localDir, execPath});\n\t}\n\n\treturn env;\n};\n\nconst handleArguments = (file, args, options = {}) => {\n\tconst parsed = crossSpawn._parse(file, args, options);\n\tfile = parsed.command;\n\targs = parsed.args;\n\toptions = parsed.options;\n\n\toptions = {\n\t\tmaxBuffer: DEFAULT_MAX_BUFFER,\n\t\tbuffer: true,\n\t\tstripFinalNewline: true,\n\t\textendEnv: true,\n\t\tpreferLocal: false,\n\t\tlocalDir: options.cwd || process.cwd(),\n\t\texecPath: process.execPath,\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true,\n\t\tall: false,\n\t\twindowsHide: true,\n\t\tverbose: verboseDefault,\n\t\t...options,\n\t};\n\n\toptions.env = getEnv(options);\n\n\toptions.stdio = normalizeStdio(options);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\targs.unshift('/q');\n\t}\n\n\treturn {file, args, options, parsed};\n};\n\nconst handleOutput = (options, value, error) => {\n\tif (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n\t\t// When `execaSync()` errors, we normalize it to '' to mimic `execa()`\n\t\treturn error === undefined ? undefined : '';\n\t}\n\n\tif (options.stripFinalNewline) {\n\t\treturn stripFinalNewline(value);\n\t}\n\n\treturn value;\n};\n\nexport function execa(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\tlogCommand(escapedCommand, parsed.options);\n\n\tvalidateTimeout(parsed.options);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\t// Ensure the returned error is always both a promise and a child process\n\t\tconst dummySpawned = new childProcess.ChildProcess();\n\t\tconst errorPromise = Promise.reject(makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t}));\n\t\tmergePromise(dummySpawned, errorPromise);\n\t\treturn dummySpawned;\n\t}\n\n\tconst spawnedPromise = getSpawnedPromise(spawned);\n\tconst timedPromise = setupTimeout(spawned, parsed.options, spawnedPromise);\n\tconst processDone = setExitHandler(spawned, parsed.options, timedPromise);\n\n\tconst context = {isCanceled: false};\n\n\tspawned.kill = spawnedKill.bind(null, spawned.kill.bind(spawned));\n\tspawned.cancel = spawnedCancel.bind(null, spawned, context);\n\n\tconst handlePromise = async () => {\n\t\tconst [{error, exitCode, signal, timedOut}, stdoutResult, stderrResult, allResult] = await getSpawnedResult(spawned, parsed.options, processDone);\n\t\tconst stdout = handleOutput(parsed.options, stdoutResult);\n\t\tconst stderr = handleOutput(parsed.options, stderrResult);\n\t\tconst all = handleOutput(parsed.options, allResult);\n\n\t\tif (error || exitCode !== 0 || signal !== null) {\n\t\t\tconst returnedError = makeError({\n\t\t\t\terror,\n\t\t\t\texitCode,\n\t\t\t\tsignal,\n\t\t\t\tstdout,\n\t\t\t\tstderr,\n\t\t\t\tall,\n\t\t\t\tcommand,\n\t\t\t\tescapedCommand,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut,\n\t\t\t\tisCanceled: context.isCanceled || (parsed.options.signal ? parsed.options.signal.aborted : false),\n\t\t\t\tkilled: spawned.killed,\n\t\t\t});\n\n\t\t\tif (!parsed.options.reject) {\n\t\t\t\treturn returnedError;\n\t\t\t}\n\n\t\t\tthrow returnedError;\n\t\t}\n\n\t\treturn {\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\texitCode: 0,\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\tall,\n\t\t\tfailed: false,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t};\n\t};\n\n\tconst handlePromiseOnce = onetime(handlePromise);\n\n\thandleInput(spawned, parsed.options);\n\n\tspawned.all = makeAllStream(spawned, parsed.options);\n\n\taddPipeMethods(spawned);\n\tmergePromise(spawned, handlePromiseOnce);\n\treturn spawned;\n}\n\nexport function execaSync(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\tlogCommand(escapedCommand, parsed.options);\n\n\tconst input = handleInputSync(parsed.options);\n\n\tlet result;\n\ttry {\n\t\tresult = childProcess.spawnSync(parsed.file, parsed.args, {...parsed.options, input});\n\t} catch (error) {\n\t\tthrow makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t});\n\t}\n\n\tconst stdout = handleOutput(parsed.options, result.stdout, result.error);\n\tconst stderr = handleOutput(parsed.options, result.stderr, result.error);\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst error = makeError({\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\terror: result.error,\n\t\t\tsignal: result.signal,\n\t\t\texitCode: result.status,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: result.error && result.error.code === 'ETIMEDOUT',\n\t\t\tisCanceled: false,\n\t\t\tkilled: result.signal !== null,\n\t\t});\n\n\t\tif (!parsed.options.reject) {\n\t\t\treturn error;\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\texitCode: 0,\n\t\tstdout,\n\t\tstderr,\n\t\tfailed: false,\n\t\ttimedOut: false,\n\t\tisCanceled: false,\n\t\tkilled: false,\n\t};\n}\n\nconst normalizeScriptStdin = ({input, inputFile, stdio}) => input === undefined && inputFile === undefined && stdio === undefined\n\t? {stdin: 'inherit'}\n\t: {};\n\nconst normalizeScriptOptions = (options = {}) => ({\n\tpreferLocal: true,\n\t...normalizeScriptStdin(options),\n\t...options,\n});\n\nfunction create$(options) {\n\tfunction $(templatesOrOptions, ...expressions) {\n\t\tif (!Array.isArray(templatesOrOptions)) {\n\t\t\treturn create$({...options, ...templatesOrOptions});\n\t\t}\n\n\t\tconst [file, ...args] = parseTemplates(templatesOrOptions, expressions);\n\t\treturn execa(file, args, normalizeScriptOptions(options));\n\t}\n\n\t$.sync = (templates, ...expressions) => {\n\t\tif (!Array.isArray(templates)) {\n\t\t\tthrow new TypeError('Please use $(options).sync`command` instead of $.sync(options)`command`.');\n\t\t}\n\n\t\tconst [file, ...args] = parseTemplates(templates, expressions);\n\t\treturn execaSync(file, args, normalizeScriptOptions(options));\n\t};\n\n\treturn $;\n}\n\nexport const $ = create$();\n\nexport function execaCommand(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa(file, args, options);\n}\n\nexport function execaCommandSync(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execaSync(file, args, options);\n}\n\nexport function execaNode(scriptPath, args, options = {}) {\n\tif (args && !Array.isArray(args) && typeof args === 'object') {\n\t\toptions = args;\n\t\targs = [];\n\t}\n\n\tconst stdio = normalizeStdioNode(options);\n\tconst defaultExecArgv = process.execArgv.filter(arg => !arg.startsWith('--inspect'));\n\n\tconst {\n\t\tnodePath = process.execPath,\n\t\tnodeOptions = defaultExecArgv,\n\t} = options;\n\n\treturn execa(\n\t\tnodePath,\n\t\t[\n\t\t\t...nodeOptions,\n\t\t\tscriptPath,\n\t\t\t...(Array.isArray(args) ? args : []),\n\t\t],\n\t\t{\n\t\t\t...options,\n\t\t\tstdin: undefined,\n\t\t\tstdout: undefined,\n\t\t\tstderr: undefined,\n\t\t\tstdio,\n\t\t\tshell: false,\n\t\t},\n\t);\n}\n","export default function stripFinalNewline(input) {\n\tconst LF = typeof input === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tconst CR = typeof input === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (input[input.length - 1] === LF) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\tif (input[input.length - 1] === CR) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\treturn input;\n}\n"],"names":["cp","parse","enoent","spawn","command","args","options","parsed","spawned","hookChildProcess","module","exports","sync","result","spawnSync","error","verifyENOENTSync","status","_parse","_enoent","isWin","process","platform","notFoundError","original","syscall","Object","assign","Error","code","errno","path","spawnargs","verifyENOENT","file","originalEmit","emit","name","arg1","err","call","apply","arguments","resolveCommand","escape","readShebang","isExecutableRegExp","isCmdShimRegExp","Array","isArray","slice","undefined","shell","commandFile","shebang","unshift","detectShebang","needsShell","test","forceShell","needsDoubleEscapeMetaChars","normalize","map","arg","argument","shellCommand","concat","join","env","comspec","windowsVerbatimArguments","parseNonShell","metaCharsRegExp","replace","doubleEscapeMetaChars","fs","shebangCommand","buffer","Buffer","alloc","fd","openSync","readSync","closeSync","e","toString","which","getPathKey","resolveCommandAttempt","withoutPathExt","cwd","hasCustomCwd","shouldSwitchCwd","chdir","disabled","resolved","pathExt","delimiter","resolve","core","isexe","cb","Promise","TypeError","reject","er","is","ignoreErrors","global","TESTING_WINDOWS","checkStat","statSync","stat","isFile","mod","mode","uid","gid","myUid","getuid","myGid","getgid","u","parseInt","g","checkMode","isSymbolicLink","pathext","PATHEXT","split","indexOf","i","length","p","toLowerCase","substr","checkPathExt","isWindows","OSTYPE","COLON","getNotFoundError","cmd","getPathInfo","opt","colon","pathEnv","match","PATH","pathExtExe","found","step","all","ppRaw","pathPart","pCmd","subStep","ii","ext","push","then","res","j","cur","ex","nothrow","PassThrough","sources","output","objectMode","setMaxListeners","add","isEmpty","on","remove","prototype","forEach","source","this","once","bind","pipe","end","filter","it","readable","pathKey","environment","keys","reverse","find","key","toUpperCase","shebangRegex","string","binary","pop","npmRunPathEnv","pathName","pathOption","preferLocal","execPath","addExecPath","cwdString","URL","fileURLToPath","cwdPath","previous","applyPreferLocal","execPathString","applyExecPath","npmRunPath","copyProperty","to","from","property","ignoreNonConfigurable","toDescriptor","getOwnPropertyDescriptor","fromDescriptor","canCopyProperty","defineProperty","configurable","writable","enumerable","value","wrappedToString","withName","fromBody","toStringDescriptor","Function","toStringName","calledFunctions","WeakMap","onetime","function_","returnValue","callCount","functionName","displayName","arguments_","set","throw","Reflect","ownKeys","fromPrototype","getPrototypeOf","setPrototypeOf","changePrototype","trim","newToString","changeToString","mimicFunction","has","get","getRealtimeSignal","index","number","SIGRTMIN","action","description","standard","SIGNALS","forced","getSignals","realtimeSignals","getRealtimeSignals","normalizeSignal","signals","defaultNumber","constantSignal","constants","supported","getSignalByName","signalsByName","fromEntries","getSignalsByName","findSignalByNumber","signal","signalA","makeError","signalsA","SIGRTMAX","getSignalByNumber","getSignalsByNumber","stdout","stderr","exitCode","escapedCommand","timedOut","isCanceled","killed","timeout","signalDescription","prefix","errorCode","getErrorPrefix","execaMessage","isError","shortMessage","message","Boolean","originalMessage","bufferedData","failed","aliases","processOk","removeListener","reallyExit","listeners","kill","pid","kExitEmitter","Symbol","for","globalThis","ObjectDefineProperty","Emitter","emitted","afterExit","exit","count","id","Math","random","constructor","ev","fn","list","splice","ret","SignalExitBase","onExit","load","unload","handler","super","sig","__signal_exit_emitter__","s","opts","alwaysLast","_","a","listener","og","spawnedKill","killResult","setKillTimeout","shouldForceKill","getForceKillAfterTimeout","t","setTimeout","unref","forceKillAfterTimeout","isSigterm","SIGTERM","Number","isFinite","spawnedCancel","context","setupTimeout","killSignal","spawnedPromise","timeoutId","timeoutPromise","timeoutKill","safeSpawnedPromise","finally","clearTimeout","race","validateTimeout","setExitHandler","async","cleanup","detached","timedPromise","removeExitHandler","isStream","stream","isWritableStream","_write","_writableState","pipeToTarget","streamName","target","createWriteStream","ChildProcess","isExecaChildProcess","stdin","addPipeMethods","pipeStdout","pipeStderr","pipeAll","init","convertChunk","getSize","truncateChunk","addChunk","getFinalChunk","finalize","maxBuffer","POSITIVE_INFINITY","isAsyncIterable","state","chunk","convertedChunk","getChunkType","appendChunk","appendFinalChunk","chunkSize","newLength","addNewChunk","truncatedChunk","MaxBufferError","contents","asyncIterator","typeOfChunk","isBuffer","prototypeName","objectToString","isInteger","byteLength","byteOffset","throwObjectStream","String","getLengthProp","textEncoder","TextEncoder","useUint8Array","Uint8Array","useUint8ArrayWithOffset","getNewContentsLength","SCALE_FACTOR","ceil","log","hasArrayBufferResize","ArrayBuffer","arrayBufferMethods","encode","arrayBuffer","dataView","typedArray","others","previousLength","newContents","maxByteLength","resize","resizeArrayBuffer","resizeArrayBufferSlow","getStreamAsBuffer","arrayBufferToNodeBuffer","getStreamAsArrayBuffer","useTextDecoder","textDecoder","decode","stringMethods","TextDecoder","finalChunk","validateInputOptions","input","handleInput","inputFile","createReadStream","getInput","makeAllStream","mixed","getBufferedData","streamPromise","destroy","getStreamPromise","encoding","applyEncoding","getSpawnedResult","processDone","stdoutPromise","stderrPromise","allPromise","nativePromisePrototype","descriptors","mergePromise","promise","descriptor","getSpawnedPromise","normalizeArgs","NO_ESCAPE_REGEXP","joinCommand","getEscapedCommand","replaceAll","escapeArg","SPACES_REGEXP","parseExpression","expression","typeOfExpression","typeOfStdout","concatTokens","tokens","nextTokens","isNew","at","parseTemplate","templates","expressions","template","templateString","raw","templateTokens","newTokens","startsWith","expressionTokens","endsWith","parseTemplates","entries","verboseDefault","debuglog","enabled","padField","field","padding","padStart","logCommand","verbose","write","date","Date","getHours","getMinutes","getSeconds","getMilliseconds","getTimestamp","handleArguments","stripFinalNewline","extendEnv","localDir","windowsHide","envOption","getEnv","stdio","alias","some","hasAlias","max","normalizeStdio","handleOutput","LF","charCodeAt","CR","execa","dummySpawned","errorPromise","cancel","handlePromiseOnce","stdoutResult","stderrResult","allResult","returnedError","aborted","execaSync","readFileSync","getInputSync","handleInputSync","normalizeScriptStdin","normalizeScriptOptions","create$","$","templatesOrOptions"],"sourceRoot":""}